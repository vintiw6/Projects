import tkinter as tk
from tkinter import messagebox
import random

MAX_LINES = 3
MAX_BET = 100
MIN_BET = 1

ROWS = 3
COLS = 3

symbol_count = {
    "A": 2,
    "B": 4,
    "C": 6,
    "D": 8
}

symbol_value = {
    "A": 5,
    "B": 4,
    "C": 3,
    "D": 2
}

def check_winnings(columns, lines, bet, values):
    winnings = 0
    winnings_lines = []
    for line in range(lines):
        symbol = columns[0][line]
        for column in columns:
            symbol_to_check = column[line]
            if symbol != symbol_to_check:
                break
        else:
            winnings += values[symbol] * bet
            winnings_lines.append(line + 1)

    return winnings, winnings_lines  

def get_slot_machine_spin(rows, cols, symbols):
    all_symbols = []
    for symbol, count in symbols.items():
        for _ in range(count):
            all_symbols.append(symbol)

    columns = []
    for _ in range(cols):
        column = []
        current_symbols = all_symbols[:]
        for _ in range(rows):
            value = random.choice(current_symbols)
            current_symbols.remove(value)
            column.append(value)
        columns.append(column)

    return columns  

def print_slot_machine(columns):
    result = ""
    for row in range(len(columns[0])):
        row_result = " | ".join(column[row] for column in columns)
        result += row_result + "\n"
    return result

class SlotMachineApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Slot Machine Game")
        self.root.geometry("400x400")
        self.root.resizable(True, True)

        self.balance = 0

        # Labels and Entry Widgets
        self.balance_label = tk.Label(root, text="Current Balance: $0")
        self.balance_label.grid(row=0, column=0, columnspan=2, sticky="w", padx=10)

        self.deposit_label = tk.Label(root, text="Deposit Amount:")
        self.deposit_label.grid(row=1, column=0, sticky="w", padx=10)

        self.deposit_entry = tk.Entry(root)
        self.deposit_entry.grid(row=1, column=1, padx=10, pady=5)

        self.lines_label = tk.Label(root, text=f"Number of Lines (1-{MAX_LINES}):")
        self.lines_label.grid(row=2, column=0, sticky="w", padx=10)

        self.lines_entry = tk.Entry(root)
        self.lines_entry.grid(row=2, column=1, padx=10, pady=5)

        self.bet_label = tk.Label(root, text=f"Bet Amount (${MIN_BET}-${MAX_BET}):")
        self.bet_label.grid(row=3, column=0, sticky="w", padx=10)

        self.bet_entry = tk.Entry(root)
        self.bet_entry.grid(row=3, column=1, padx=10, pady=5)

        # Buttons
        self.deposit_button = tk.Button(root, text="Deposit", command=self.deposit)
        self.deposit_button.grid(row=4, column=0, columnspan=2, pady=10)

        self.spin_button = tk.Button(root, text="Spin", command=self.spin, state=tk.DISABLED)
        self.spin_button.grid(row=5, column=0, columnspan=2, pady=10)

        self.result_label = tk.Label(root, text="", font=("Helvetica", 12), justify="left")
        self.result_label.grid(row=6, column=0, columnspan=2, padx=10, pady=10, sticky="w")

    def deposit(self):
        amount = self.deposit_entry.get()
        if amount.isdigit():
            amount = int(amount)
            if amount > 0:
                self.balance += amount
                self.balance_label.config(text=f"Current Balance: ${self.balance}")
                self.deposit_entry.delete(0, tk.END)
                self.spin_button.config(state=tk.NORMAL)
            else:
                messagebox.showwarning("Invalid Amount", "Amount must be greater than 0.")
        else:
            messagebox.showwarning("Invalid Input", "Please enter a valid number.")

    def spin(self):
        lines = self.lines_entry.get()
        bet = self.bet_entry.get()

        if not lines.isdigit() or not bet.isdigit():
            messagebox.showwarning("Invalid Input", "Please enter valid numbers for lines and bet.")
            return

        lines = int(lines)
        bet = int(bet)
        total_bet = bet * lines

        if lines < 1 or lines > MAX_LINES:
            messagebox.showwarning("Invalid Lines", f"Please enter a number of lines between 1 and {MAX_LINES}.")
            return

        if bet < MIN_BET or bet > MAX_BET:
            messagebox.showwarning("Invalid Bet", f"Please enter a bet amount between ${MIN_BET} and ${MAX_BET}.")
            return

        if total_bet > self.balance:
            messagebox.showwarning("Insufficient Balance", f"You do not have enough to bet that amount. Your current balance is ${self.balance}.")
            return

        self.balance -= total_bet
        slots = get_slot_machine_spin(ROWS, COLS, symbol_count)
        slot_result = print_slot_machine(slots)
        winnings, winning_lines = check_winnings(slots, lines, bet, symbol_value)
        self.balance += winnings

        self.result_label.config(text=f"{slot_result}\nYou won ${winnings} on lines: {', '.join(map(str, winning_lines))}")
        self.balance_label.config(text=f"Current Balance: ${self.balance}")

        if self.balance <= 0:
            messagebox.showinfo("Game Over", "You have run out of money. Please deposit more to continue.")
            self.spin_button.config(state=tk.DISABLED)

# Run the app
root = tk.Tk()
app = SlotMachineApp(root)
root.mainloop()
